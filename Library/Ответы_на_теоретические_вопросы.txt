Теоретические вопросы:
1)Объясните основные принципы объектно-ориентированного программирования.
2)Что такое Garbage Collection в Java и как он работает?
3)Какие различия между ArrayList и LinkedList?
4)Что такое ConcurrentHashMap и в чем его преимущества по сравнению с HashMap?
5)Объясните, что такое JVM, JRE и JDK.

1. Наследование - новые классы на основе предыдущих.
   Инкапсуляция - объединение данных и методов в одной упаковке (скрывая внутреннюю реализацию).
   Полиморфизм - способность объектов разных классов реализовывать один и тот же метод по своему.
   Абстракция - вывод главных свойств в отдельный абстрактный класс.
   В целом, ООП помогает создавать более читабельный и структурированный код, а также его переиспользование.

2. Garbage Collection - сборка "муссора". Автоматически управляет памятью, освобождая ее от более 
неиспользуемых объектов (смотрит на повторное использование объектов).

3. ArrayList - динамический массив. Элементы хранятся в массиве, и, по мере необходимости, массив может
расширяться. Преимузества: быстрый доступ по индексу, быстрое добавение или удаление в КОНЦЕ списка (в середине 
все будет сдвигаться и это займет больше времени), не занимает много места тк хранит только значения.
   LinkedList - двухсвязанный список. Элементы хранят в себе ссылку на следующий и предыдущий элементы. Доступ
медленне тк нужно последовательно переходить от одного элемента к другому. Быстрое удаление тк надо сдвигать 
другие элементы. Использует больше памяти тк каждый элемент хранит в себе ссылки. Основное преимузество - работа 
с элементами в середине списка. 

4. ConcurrebtHashMap специальный класс мапы для работы в многопоточной среде  Безопасное выполнение операций 
с мапами нескольким потокам одновременно. Основное преимузество над HashMap - лучшая производительность с 
несколькими потоками, благодаря разделению мапы на сегменты. В отличии синхронизации не нуждается в блокировки
всей мапы.

5. JVM - исполняет байт код и преобразует его в машинный код
   JDK - инструменты для разработки кода на Java (включает в себя JRE)
   JRE - среда выполнения Java (включает в себя JVM)
